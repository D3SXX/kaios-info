{
  "en-US": [
    {
      "softLeftToggle": "Toggle",
      "softCenter": "Select",
      "softRight": "Menu",
      "close": "Close",
      "errorOnApi": "Couldn't get access to Api",
      "errorOnApiSmall":"No API access",
      "errorOnEmptyList": "Device list is empty",
      "errorOnDescription":"No descriptions available",
      "errorOnExample":"No examples available",
      "errorOnSource":"No sources available",
      "sideMenuExit": "Exit",
      "SideMenuToggleRefresh": "Toggle auto refresh",
      "autoRefreshEnable":"Auto refreshing is enabled",
      "autoRefreshDisable":"Auto refreshing is disabled",
      "sideMenuAbout": "About",
      "sideMenuOpenListMenu": "Open list",
      "yes":"Yes",
      "no":"No",
      "enabled":"Enabled",
      "disabled":"Disabled",
      "radioEnabled":"Radio Enabled",
      "radioDisabled":"Radio Disabled",
      "connected":"Connected",
      "disconnected":"Disconnected",
      "bit-color":"bit color",
      "portrait":"Portrait",
      "landscape":"Landscape",
      "megabytes":"MB",
      "gigabytes":"GB",
      "ghz":"GHz",
      "mhz":"MHz",
      "dbm":"dBm",
      "mbps":"Mbps",
      "megapixels":"MP",
      "millimeters":"mm",
      "charging":"Charging",
      "charged":"Charged",
      "discharging":"Discharging",
      "left":"left",
      "internal":"Internal",
      "external":"External",
      "unknown":"Unknown",
      "onLocaleInit":"Locale initialized"
    },
    {
      "1": "Model",
      "2": "OS",
      "3": "Firefox Version",
      "4": "RAM",
      "5": "Developer Mode",
      "index": "System",
      "1-details-description": "Uses User-Agent to identify the model",
      "1-details-example": "In this example it is located under 'devicename' <br> Mozilla/5.0 (type, devicename; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion KAIOS/kaiosversion",
      "1-details-source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent",
      "2-details-description": "Uses User-Agent to identify the OS",
      "2-details-example": "In this example it is located under 'KAIOS/kaioversion' <br> <text class='syntax'>Mozilla/5.0 (type, devicename; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion KAIOS/kaiosversion",
      "2-details-source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent",
      "3-details-description": "Uses User-Agent to identify the firefox version",
      "3-details-example": "In this example it is located under 'Firefox/firefoxversion' <br> <text class='syntax'>Mozilla/5.0 (type, devicename; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion KAIOS/kaiosversion",
      "3-details-source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent",
      "4-details-description": "Uses getFeature() with argument 'hardware.memory' to identify the amount of RAM",
      "4-details-example": "ram = navigator.getFeature('hardware.memory')",
      "4-details-source": "https://wiki.mozilla.org/WebAPI/Navigator.hasFeature",
      "5-details-description": "Uses getFeature() with argument 'dom.apps.developer_mode' to identify the Developer Mode status",
      "5-details-example": "devMode = navigator.getFeature('dom.apps.developer_mode')",
      "5-details-source": "https://kaios.dev/2024/01/complete-feature-detection-on-kaios/"
    },
    {
      "1": "Resolution",
      "2": "Depth",
      "3": "Aspect ratio",
      "4": "Orientation",
      "index": "Display",
      "1-details-description": "Uses Window: screen property to identify the resolution",
      "1-details-example": "width = window.screen.width; height = window.screen.height;",
      "1-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen",
      "2-details-description": "Uses Window: screen property to identify the color depth",
      "2-details-example": "colorDepth = window.screen.colorDepth",
      "2-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen",
      "3-details-description": "Uses screen's width and height to calculate ratio",
      "3-details-example": "commonDivisor = gcd(window.screen.width, window.screen.height); ratioWidth = window.screen.width / commonDivisor;",
      "3-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen",
      "4-details-description": "Uses Window: screen property to identify the screen orientation",
      "4-details-example": "orientation = window.screen.mozOrientation || window.screen.orientation.type",
      "4-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen"
    },
    {
      "1": "Cores",
      "2": "Frequency",
      "index": "CPU",
      "1-details-description": "Uses Navigator: hardwareConcurrency property to identify the amount of cores",
      "1-details-example": "cpuCores = navigator.hardwareConcurrency",
      "1-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/hardwareConcurrency",
      "2-details-description": "Estimates the cpu frequency by using for loops and Performance: now() method",
      "2-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Performance/now"
    },
    {
      "1": "Model",
      "2": "Manufacturer",
      "index": "GPU",
      "1-details-description": "Uses WebGL to initialize a context to access GPU information. It retrieves GPU renderer details using the WebGL context.",
      "1-details-example": "canvas = document.createElement('canvas'); canvas.getContext('experimental-webgl') dbgRenderInfo = gl.getExtension('WEBGL_debug_renderer_info');",
      "1-details-source": "https://gist.github.com/cvan/042b2448fcecefafbb6a91469484cdf8",
      "2-details-description": "Uses WebGL to initialize a context to access GPU information. It retrieves GPU vendor details using the WebGL context",
      "2-details-example": "canvas = document.createElement('canvas'); canvas.getContext('experimental-webgl') dbgRenderInfo = gl.getExtension('WEBGL_debug_renderer_info');",
      "2-details-source": "https://gist.github.com/cvan/042b2448fcecefafbb6a91469484cdf8"
    },
    {
      "1": "ID",
      "2": "Name",
      "3": "Photo Resolution",
      "4": "Focal Length",
      "5": "Video Resolution",
      "6": "Bitrate",
      "7": "Frame time",
      "8": "Codec",
      "index": "Camera",
      "1-details-description": "Uses navigator.mozCameras's getCamera('identifier') method to access the camera, then it reads camera.id to identify the id",
      "1-details-example": "cameraList = navigator .mozCameras.getListOfCameras(); camera = navigator.mozCameras.getCamera(camerasList[index]) id = camera.camera.id",
      "1-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "2-details-description": "Uses navigator.mozCameras's getListOfCameras() method to get camera names",
      "2-details-example": "cameraList = navigator.mozCameras.getListOfCameras(); name = cameraList[index]",
      "2-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "3-details-description": "Uses navigator.mozCameras's getCamera('identifier') method to access the camera, then it reads camera.capabilities.width and height",
      "3-details-example": "camera = navigator .mozCameras.getCamera (camerasList[index]); width = camera.camera.capabilities.pictureSizes[0].width;",
      "3-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "4-details-description": "Uses navigator.mozCameras's getCamera('identifier') method to access the camera, then it reads camera.focalLength to identify the focal length",
      "4-details-example": "cameraList = navigator .mozCameras.getListOfCameras(); camera = navigator.mozCameras.getCamera(camerasList[index]); focal = camera.camera.focalLength",
      "4-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "5-details-description": "Uses navigator.mozCameras's getCamera('identifier') method to access the camera, then it reads .camera.capabilities.recorderProfiles[.configuration.recorderProfile] to identify the video resolution",
      "5-details-example": "cR = cameraInfo[currentCameras] .configuration.recorderProfile; name = cameraInfo[currentCameras].camera.capabilities.recorderProfiles[cR].name",
      "5-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "6-details-description": "Uses navigator.mozCameras's getCamera('identifier') method to access the camera, then it reads .camera.capabilities.recorderProfiles[.configuration.recorderProfile] to identify the video bitrate",
      "6-details-example": "cR = cameraInfo [currentCameras].configuration .recorderProfile; bps = cameraInfo[currentCameras].camera.capabilities.recorderProfiles[cR].video.bitsPerSecond",
      "6-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "7-details-description": "Uses navigator.mozCameras's getCamera('identifier') method to access the camera, then it reads .camera.capabilities.recorderProfiles[.configuration.recorderProfile] to identify the video frame time",
      "7-details-example": "cR = cameraInfo [currentCameras].configuration .recorderProfile; fps = cameraInfo [currentCameras].camera.capabilities.recorderProfiles[cR].video.framesPerSecond",
      "7-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "8-details-description": "Uses navigator.mozCameras's getCamera('identifier') method to access the camera, then it reads .camera.capabilities.recorderProfiles[.configuration.recorderProfile] to identify the video codec",
      "8-details-example": "cR = cameraInfo [currentCameras].configuration.recorderProfile; codec = cameraInfo[currentCameras].camera.capabilities.recorderProfiles[cR].video.codec",
      "8-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras"
    },
    {
      "1": "Level",
      "2": "Health",
      "3": "Status",
      "4": "Temperature",
      "index": "Battery",
      "1-details-description": "Uses navigator.getBattery() method to access the battery API, then it reads .level to identify the battery level",
      "1-details-example": "navigator.getBattery().then(function(result){batteryData = result}); level = batteryData.level",
      "1-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/level/",
      "2-details-description": "Uses navigator.getBattery() method to access the battery API, then it reads .health to identify the battery health",
      "2-details-example": "navigator.getBattery().then(function(result){batteryData = result}); health = batteryData.health",
      "2-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/health/",
      "3-details-description": "Uses navigator.getBattery() method to access the battery API, then checks .charging time to determine if device is charging or discharging",
      "3-details-example": "navigator.getBattery().then(function(result){batteryData = result}); if (batteryData.charging){} else{}",
      "3-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/chargingtime/",
      "4-details-description": "Uses navigator.getBattery() method to access the battery API, then it reads .temperature to identify the battery temperature",
      "4-details-example": "navigator.getBattery().then(function(result){batteryData = result}); temperature = batteryData.temperature",
      "4-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/temperature/"
    },
    {
      "1": "Type",
      "2": "SSID",
      "3": "Speed",
      "4": "Signal Strength",
      "5": "IP Address",
      "6": "Frequency",
      "7": "Internet Access",
      "8": "Hidden SSID",
      "9": "MAC",
      "index": "Wi-Fi",
      "1-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .enabled to identify the Wi-Fi enabled status",
      "1-details-example": "wifiData = navigator.mozWifiManager; wifiStatus = wifiData.enabled ? 'Enabled' : 'Disabled';",
      "1-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "2-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .connection.network.ssid to identify the Wi-Fi SSID",
      "2-details-example": "wifiData = navigator.mozWifiManager; wifiSsid = wifiData.connection.network.ssid;",
      "2-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "3-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .connectionInformation.linkSpeed to identify the Wi-Fi connection speed",
      "3-details-example": "wifiData = navigator.mozWifiManager; wifiSpeed = wifiData.connectionInformation .linkSpeed;",
      "3-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "4-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .connectionInformation.signalStrength to identify the Wi-Fi signal strength",
      "4-details-example": "wifiData = navigator.mozWifiManager; wifiSignal = wifiData.connectionInformation.signalStrength;",
      "4-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "5-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .connectionInformation.ipAddress to identify the Wi-Fi IP Address",
      "5-details-example": "wifiData = navigator.mozWifiManager; wifiIp = wifiData.connectionInformation.ipAddress;",
      "5-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "6-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .connection .network.frequency to identify the Wi-Fi frequency used",
      "6-details-example": "wifiData = navigator.mozWifiManager; wifiFrequency = wifiData.connection.network.frequency;",
      "6-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "7-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads.hasInternet to identify the Wi-Fi internet status",
      "7-details-example": "wifiData = navigator.mozWifiManager; wifiStatus = wifiData.hasInternet;",
      "7-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "8-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads.connection .network.hidden to identify the Wi-Fi hidden status",
      "8-details-example": "wifiData = navigator.mozWifiManager; wifiStatus = wifiData.connection.network.hidden;",
      "8-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "9-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .macAddress to identify the Wi-Fi MAC Address",
      "9-details-example": "wifiData = navigator.mozWifiManager; wifiStatus = wifiData.macAddress;",
      "9-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/"
    },
    {
      "1": "Type",
      "2": "Provider",
      "3": "Standard",
      "4": "Signal Strength",
      "5": "Roaming",
      "6": "Status",
      "7": "ICCID",
      "index": "Network",
      "1-details-description": "Uses navigator.mozMobileConnections[sim] to access the Mobile Connection API, then it reads .radioState to identify the radio status",
      "1-details-example": "mobileData = navigator.mozMobileConnections[sim]; radio = mobileData.radioState;",
      "1-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
      "2-details-description": "Uses navigator.mozMobileConnections[sim] to access the Mobile Connection API, then it reads .data.network.longName to identify the provider",
      "2-details-example": "mobileData = navigator.mozMobileConnections[sim]; provider = mobileData.data.network.longName;",
      "2-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
      "3-details-description": "Uses navigator.mozMobileConnections[sim] to access the Mobile Connection API, then it reads .data.type, if the variable is empty assumes GSM if connection is active",
      "3-details-example": "mobileData = navigator.mozMobileConnections[sim]; standard = mobileData.data.type ? mobileData.data.type : 'GSM';",
      "3-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
      "4-details-description": "Uses navigator.mozMobileConnections[sim] to access the Mobile Connection API, then it reads .signalStrength['activeType'] to get the signal strength",
      "4-details-example": "mobileData = navigator.mozMobileConnections[sim];<br>gsmSignal = mobileData.signalStrength.gsmSignalStrength; lteSignal = mobileData.signalStrength.lteSignalStrength;",
      "4-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
      "5-details-description": "Uses navigator.mozMobileConnections[sim] to access the Mobile Connection API, then it reads .data.roaming to get the roaming status",
      "5-details-example": "mobileData = navigator.mozMobileConnections[sim]; roaming = mobileData.data.roaming;",
      "5-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
      "6-details-description": "Uses navigator.mozMobileConnections[sim] to access the Mobile Connection API, then it reads .voice.state to identify the connection status",
      "6-details-example": "mobileData = navigator.mozMobileConnections[sim]; status = mobileData.voice.state;",
      "6-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",      
      "7-details-description": "Uses navigator.mozMobileConnections[sim] to access the Mobile Connection API, then it reads .iccId to identify the ICCID",
      "7-details-example": "mobileData = navigator.mozMobileConnections[sim]; iccId = mobileData.iccId;",
      "7-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection"
    },
    {
      "1": "Status",
      "2": "BT Name",
      "3": "Address",
      "4": "Discoverable",
      "5": "Discovering",
      "index": "Bluetooth",
      "1-details-description": "Uses navigator.mozBluetooth to access the Bluetooth API, then reads .defaultAdapter.state to identify bluetooth status",
      "1-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.state",
      "1-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
      "2-details-description": "Uses navigator.mozBluetooth to access the Bluetooth API, then reads .defaultAdapter.name to identify bluetooth name",
      "2-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.name",
      "2-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
      "3-details-description": "Uses navigator.mozBluetooth to access the Bluetooth API, then reads .defaultAdapter.address to identify bluetooth address",
      "3-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.address",
      "3-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
      "4-details-description": "Uses navigator.mozBluetooth to access the Bluetooth API, then reads .defaultAdapter.discoverable to identify bluetooth discoverable status",
      "4-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.discoverable",
      "4-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
      "5-details-description": "Uses navigator.mozBluetooth to access the Bluetooth API, then reads .defaultAdapter.discovering to identify bluetooth discovering status",
      "5-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.discovering",
      "5-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/"
    },
    {
      "1": "Type",
      "2": "Total Space",
      "3": "Space Used",
      "4": "Default",
      "index": "Storage",
      "1-details-description": "Uses navigator.getDeviceStorages('sdcard') to access the storages API, then reads .storageName to identify name and type",
      "1-details-example": "deviceStorages = navigator.getDeviceStorages('sdcard');<br>name = deviceStorages[index].storageName;",
      "1-details-source": "https://developer.kaiostech.com/docs/api/web-apis/deviceStorage/device-storage/",
      "2-details-description": "Uses navigator .getDeviceStorages('sdcard') to access the storages API, then uses .freeSpace() and .usedSpace() methods to get free and used space available and combines them",
      "2-details-example": "deviceStorages = navigator.getDeviceStorages('sdcard');<br> total = deviceStorages[index].freeSpace() + deviceStorages[index].usedSpace();",
      "2-details-source": "https://developer.kaiostech.com/docs/api/web-apis/deviceStorage/device-storage/",
      "3-details-description": "Uses navigator .getDeviceStorages('sdcard') to access the storages API, then reads .usedSpace method to identify the space used",
      "3-details-example": "deviceStorages = navigator.getDeviceStorages('sdcard'); usedSpace = deviceStorages[index].usedSpace();",
      "3-details-source": "https://developer.kaiostech.com/docs/api/web-apis/deviceStorage/device-storage/",
      "4-details-description": "Uses navigator .getDeviceStorages('sdcard') to access the storages API, then reads .default to identify default status",
      "4-details-example": "deviceStorages = navigator.getDeviceStorages('sdcard'); default = deviceStorages[index].default;",
      "4-details-source": "https://developer.kaiostech.com/docs/api/web-apis/deviceStorage/device-storage/"
    },
    {
      "1": "Made by",
      "2": "Build:",
      "3": "Release date:",
      "index": "About KaiOS Info"
    }
  ],
    "fi-FI": [
      {
        "softLeftToggle": "Vaihda",
        "softCenter": "Valitse",
        "softRight": "Valikko",
        "close": "Sulje",
        "errorOnApi": "Ei pääsyä Apiin",
        "errorOnApiSmall":"Ei API-pääsyä",
        "errorOnEmptyList": "Laitelistalla ei ole laitteita",
        "errorOnDescription":"Ei saatavilla olevia kuvauksia",
        "errorOnExample":"Ei saatavilla olevia esimerkkejä",
        "errorOnSource":"Ei saatavilla olevia lähteitä",
        "sideMenuExit": "Poistu",
        "SideMenuToggleRefresh": "Vaihda automaattinen päivitys",
        "autoRefreshEnable":"Automaattinen päivitys on käytössä",
        "autoRefreshDisable":"Automaattinen päivitys on poissa käytöstä",
        "sideMenuAbout": "Tietoja",
        "sideMenuOpenListMenu": "Avaa luettelo",
        "yes":"Kyllä",
        "no":"Ei",
        "enabled":"Käytössä",
        "disabled":"Pois käytöstä",
        "radioEnabled":"Radio käytössä",
        "radioDisabled":"Radio pois käytöstä",
        "connected":"Yhdistetty",
        "disconnected":"Yhdistämätön",
        "bit-color":"bittiväri",
        "portrait":"Pysty",
        "landscape":"Vaaka",
        "megabytes":"Mt",
        "gigabytes":"Gt",
        "ghz":"GHz",
        "mhz": "MHz",
        "dbm": "dBm",
        "mbps":"Mbps",
        "megapixels":"MP",
        "millimeters":"mm",
        "charging":"Lataa",
        "charged":"Ladattu",
        "discharging":"Purettu",
        "left":"vasen",
        "internal":"Sisäinen",
        "external":"Ulkoinen",
        "unknown": "Tuntematon",
        "onLocaleInit": "Lokaali alustetaan"
      },
      {
        "1": "Malli",
        "2": "Käyttöjärjestelmä",
        "3": "Firefox-versio",
        "4": "RAM-muisti",
        "5": "Kehittäjätila",
        "index": "Järjestelmä",
        "1-details-description": "Käyttää User-Agentia mallin tunnistamiseen",
        "1-details-example": "Tässä esimerkissä se sijaitsee 'devicename' alla <br> Mozilla/5.0 (type, devicename; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion KAIOS/kaiosversion",
        "1-details-source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent",
        "2-details-description": "Käyttää User-Agentia käyttöjärjestelmän tunnistamiseen",
        "2-details-example": "Tässä esimerkissä se sijaitsee 'KAIOS/kaioversion' alla <br> <text class='syntax'>Mozilla/5.0 (type, devicename; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion KAIOS/kaiosversion",
        "2-details-source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent",
        "3-details-description": "Käyttää User-Agentia Firefoxin version tunnistamiseen",
        "3-details-example": "Tässä esimerkissä se sijaitsee 'Firefox/firefoxversion' alla <br> <text class='syntax'>Mozilla/5.0 (type, devicename; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion KAIOS/kaiosversion",
        "3-details-source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent",
        "4-details-description": "Käyttää getFeature()-metodia argumentilla 'hardware.memory' RAM-muistin määrän tunnistamiseen",
        "4-details-example": "ram = navigator.getFeature('hardware.memory')",
        "4-details-source": "https://wiki.mozilla.org/WebAPI/Navigator.hasFeature",
        "5-details-description": "Käyttää getFeature()-metodia argumentilla 'dom.apps.developer_mode' Kehittäjätilan tilan tunnistamiseen",
        "5-details-example": "devMode = navigator.getFeature('dom.apps.developer_mode')",
        "5-details-source": "https://kaios.dev/2024/01/complete-feature-detection-on-kaios/"
      },
      {
        "1": "Resoluutio",
        "2": "Syvyys",
        "3": "Kuvasuhde",
        "4": "Suuntaus",
        "index": "Näyttö",
        "1-details-description": "Käyttää Window: screen -ominaisuutta resoluution tunnistamiseen",
        "1-details-example": "leveys = window.screen.width; korkeus = window.screen.height;",
        "1-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen",
        "2-details-description": "Käyttää Window: screen -ominaisuutta värisyvyyden tunnistamiseen",
        "2-details-example": "colorDepth = window.screen.colorDepth",
        "2-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen",
        "3-details-description": "Käyttää näytön leveyttä ja korkeutta kuvasuhteen laskemiseen",
        "3-details-example": "commonDivisor = gcd(window.screen.width, window.screen.height); ratioWidth = window.screen.width / commonDivisor;",
        "3-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen",
        "4-details-description": "Käyttää Window: screen -ominaisuutta näytön suuntauksen tunnistamiseen",
        "4-details-example": "orientation = window.screen.mozOrientation || window.screen.orientation.type",
        "4-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen"
      },
      {
        "1": "Ytimet",
        "2": "Taajuus",
        "index": "CPU",
        "1-details-description": "Käyttää Navigator: hardwareConcurrency -ominaisuutta ytimien määrän tunnistamiseen",
        "1-details-example": "cpuCores = navigator.hardwareConcurrency",
        "1-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/hardwareConcurrency",
        "2-details-description": "Arvioi prosessorin taajuuden käyttäen for-silmukoita ja Performance: now() -metodia",
        "2-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Performance/now"
      },
      {
        "1": "Malli",
        "2": "Valmistaja",
        "index": "GPU",
        "1-details-description": "Käyttää WebGL:ää alustamaan kontekstin GPU-tietojen saamiseksi. Palauttaa GPU:n renderöintitiedot WebGL-kontekstilla.",
        "1-details-example": "canvas = document.createElement('canvas'); canvas.getContext('experimental-webgl') dbgRenderInfo = gl.getExtension('WEBGL_debug_renderer_info');",
        "1-details-source": "https://gist.github.com/cvan/042b2448fcecefafbb6a91469484cdf8",
        "2-details-description": "Käyttää WebGL:ää alustamaan kontekstin GPU-tietojen saamiseksi. Palauttaa GPU:n valmistajan tiedot WebGL-kontekstilla",
        "2-details-example": "canvas = document.createElement('canvas'); canvas.getContext('experimental-webgl') dbgRenderInfo = gl.getExtension('WEBGL_debug_renderer_info');",
        "2-details-source": "https://gist.github.com/cvan/042b2448fcecefafbb6a91469484cdf8"
      },
      {
        "1": "Tunniste",
        "2": "Nimi",
        "3": "Valokuvan tarkkuus",
        "4": "Polttoväli",
        "5": "Videon tarkkuus",
        "6": "Bittinopeus",
        "7": "Ruutuaika",
        "8": "Kodekki",
        "index": "Kamera",
        "1-details-description": "Käyttää navigator.mozCamerasin getCamera('tunnistin') -metodia kameran käyttämiseen, sitten se lukee camera.id:n tunnistamiseksi tunniste",
        "1-details-example": "cameraList = navigator .mozCameras.getListOfCameras(); camera = navigator.mozCameras.getCamera(camerasList[index]) id = camera.camera.id",
        "1-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
        "2-details-description": "Käyttää navigator.mozCamerasin getListOfCameras() -metodia kameranimien saamiseksi",
        "2-details-example": "cameraList = navigator.mozCameras.getListOfCameras(); name = cameraList[index]",
        "2-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
        "3-details-description": "Käyttää navigator.mozCamerasin getCamera('tunnistin') -metodia kameran käyttämiseen, sitten se lukee camera.capabilities.width:n ja height:n",
        "3-details-example": "camera = navigator .mozCameras.getCamera (camerasList[index]); width = camera.camera.capabilities.pictureSizes[0].width;",
        "3-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
        "4-details-description": "Käyttää navigator.mozCamerasin getCamera('tunnistin') -metodia kameran käyttämiseen, sitten se lukee camera.focalLengthin polttovälin tunnistamiseksi",
        "4-details-example": "cameraList = navigator .mozCameras.getListOfCameras(); camera = navigator.mozCameras.getCamera(camerasList[index]); focal = camera.camera.focalLength",
        "4-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
        "5-details-description": "Käyttää navigator.mozCamerasin getCamera('tunnistin') -metodia kameran käyttämiseen, sitten se lukee .camera.capabilities.recorderProfiles[.configuration.recorderProfile]:n videon tarkkuuden tunnistamiseksi",
        "5-details-example": "cR = cameraInfo[currentCameras] .configuration.recorderProfile; name = cameraInfo[currentCameras].camera.capabilities.recorderProfiles[cR].name",
        "5-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
        "6-details-description": "Käyttää navigator.mozCamerasin getCamera('tunnistin') -metodia kameran käyttämiseen, sitten se lukee .camera.capabilities.recorderProfiles[.configuration.recorderProfile]:n videon bittinopeuden tunnistamiseksi",
        "6-details-example": "cR = cameraInfo [currentCameras].configuration .recorderProfile; bps = cameraInfo[currentCameras].camera.capabilities.recorderProfiles[cR].video.bitsPerSecond",
        "6-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
        "7-details-description": "Käyttää navigator.mozCamerasin getCamera('tunnistin') -metodia kameran käyttämiseen, sitten se lukee .camera.capabilities.recorderProfiles[.configuration.recorderProfile]:n videon ruutuajan tunnistamiseksi",
        "7-details-example": "cR = cameraInfo [currentCameras].configuration .recorderProfile; fps = cameraInfo [currentCameras].camera.capabilities.recorderProfiles[cR].video.framesPerSecond",
        "7-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
        "8-details-description": "Käyttää navigator.mozCamerasin getCamera('tunnistin') -metodia kameran käyttämiseen, sitten se lukee .camera.capabilities.recorderProfiles[.configuration.recorderProfile]:n videon kodekin tunnistamiseksi",
        "8-details-example": "cR = cameraInfo [currentCameras].configuration.recorderProfile; codec = cameraInfo[currentCameras].camera.capabilities.recorderProfiles[cR].video.codec",
        "8-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras"
      },      
      {
        "1": "Taso",
        "2": "Terveys",
        "3": "Tila",
        "4": "Lämpötila",
        "index": "Akku",
        "1-details-description": "Käyttää navigator.getBattery() -metodia akun API:n saamiseksi, sitten lukee .levelin tunnistamaan akun tason",
        "1-details-example": "navigator.getBattery().then(function(result){batteryData = result}); level = batteryData.level",
        "1-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/level/",
        "2-details-description": "Käyttää navigator.getBattery() -metodia akun API:n saamiseksi, sitten lukee .healthin tunnistamaan akun terveyden",
        "2-details-example": "navigator.getBattery().then(function(result){batteryData = result}); health = batteryData.health",
        "2-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/health/",
        "3-details-description": "Käyttää navigator.getBattery() -metodia akun API:n saamiseksi, sitten tarkistaa .charging ajan määrittääkseen, onko laite latauksessa vai purkautumassa",
        "3-details-example": "navigator.getBattery().then(function(result){batteryData = result}); if (batteryData.charging){} else{}",
        "3-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/chargingtime/",
        "4-details-description": "Käyttää navigator.getBattery() -metodia akun API:n saamiseksi, sitten lukee .temperaturen tunnistamaan akun lämpötilan",
        "4-details-example": "navigator.getBattery().then(function(result){batteryData = result}); temperature = batteryData.temperature",
        "4-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/temperature/"
      },
      {
        "1": "Tyyppi",
        "2": "SSID",
        "3": "Nopeus",
        "4": "Signaalinvoimakkuus",
        "5": "IP-osoite",
        "6": "Taajuus",
        "7": "Internet-yhteys",
        "8": "Piilotettu SSID",
        "9": "MAC",
        "index": "Wi-Fi",
        "1-details-description": "Käyttää navigator.mozWifiManageria Wi-Fi API:n saamiseksi, sitten lukee .enabledin tunnistamaan Wi-Fi:n käytettävyystilan",
        "1-details-example": "wifiData = navigator.mozWifiManager; wifiStatus = wifiData.enabled ? 'Enabled' : 'Disabled';",
        "1-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
        "2-details-description": "Käyttää navigator.mozWifiManageria Wi-Fi API:n saamiseksi, sitten lukee .connection.network.ssidin tunnistamaan Wi-Fi SSID:n",
        "2-details-example": "wifiData = navigator.mozWifiManager; wifiSsid = wifiData.connection.network.ssid;",
        "2-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
        "3-details-description": "Käyttää navigator.mozWifiManageria Wi-Fi API:n saamiseksi, sitten lukee .connectionInformation.linkSpeedin tunnistamaan Wi-Fi-yhteyden nopeuden",
        "3-details-example": "wifiData = navigator.mozWifiManager; wifiSpeed = wifiData.connectionInformation .linkSpeed;",
        "3-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
        "4-details-description": "Käyttää navigator.mozWifiManageria Wi-Fi API:n saamiseksi, sitten lukee .connectionInformation.signalStrengthin tunnistamaan Wi-Fi-signaalinvoimakkuuden",
        "4-details-example": "wifiData = navigator.mozWifiManager; wifiSignal = wifiData.connectionInformation.signalStrength;",
        "4-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
        "5-details-description": "Käyttää navigator.mozWifiManageria Wi-Fi API:n saamiseksi, sitten lukee .connectionInformation.ipAddressin tunnistamaan Wi-Fi IP-osoitteen",
        "5-details-example": "wifiData = navigator.mozWifiManager; wifiIp = wifiData.connectionInformation.ipAddress;",
        "5-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
        "6-details-description": "Käyttää navigator.mozWifiManageria Wi-Fi API:n saamiseksi, sitten lukee .connection .network.frequencyn tunnistamaan käytetyn Wi-Fi-taajuuden",
        "6-details-example": "wifiData = navigator.mozWifiManager; wifiFrequency = wifiData.connection.network.frequency;",
        "6-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
        "7-details-description": "Käyttää navigator.mozWifiManageria Wi-Fi API:n saamiseksi, sitten lukee .hasInternetin tunnistamaan Wi-Fi-internet-yhteyden tilan",
        "7-details-example": "wifiData = navigator.mozWifiManager; wifiStatus = wifiData.hasInternet;",
        "7-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
        "8-details-description": "Käyttää navigator.mozWifiManageria Wi-Fi API:n saamiseksi, sitten lukee .connection .network.hiddenin tunnistamaan Wi-Fi:n piilotetun tilan",
        "8-details-example": "wifiData = navigator.mozWifiManager; wifiStatus = wifiData.connection.network.hidden;",
        "8-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
        "9-details-description": "Käyttää navigator.mozWifiManageria Wi-Fi API:n saamiseksi, sitten lukee .macAddressin tunnistamaan Wi-Fi MAC-osoitteen",
        "9-details-example": "wifiData = navigator.mozWifiManager; wifiStatus = wifiData.macAddress;",
        "9-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/"
      },
      {
        "1": "Tyyppi",
        "2": "Valmistaja",
        "3": "Standardi",
        "4": "Signaalinvoimakkuus",
        "5": "Kiertäminen",
        "6": "Tila",
        "7": "ICCID",
        "index": "Verkko",
        "1-details-description": "Käyttää navigator.mozMobileConnections[sim] saadakseen pääsyn Mobile Connection API:iin, sitten lukee .radioStatein tunnistamaan radion tilan",
        "1-details-example": "mobileData = navigator.mozMobileConnections[sim]; radio = mobileData.radioState;",
        "1-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
        "2-details-description": "Käyttää navigator.mozMobileConnections[sim] saadakseen pääsyn Mobile Connection API:iin, sitten lukee .data.network.longNamen tunnistamaan tarjoajan",
        "2-details-example": "mobileData = navigator.mozMobileConnections[sim]; provider = mobileData.data.network.longName;",
        "2-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
        "3-details-description": "Käyttää navigator.mozMobileConnections[sim] saadakseen pääsyn Mobile Connection API:iin, sitten lukee .data.typen, jos muuttuja on tyhjä, olettaa GSM:n, jos yhteys on aktiivinen",
        "3-details-example": "mobileData = navigator.mozMobileConnections[sim]; standard = mobileData.data.type ? mobileData.data.type : 'GSM';",
        "3-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
        "4-details-description": "Käyttää navigator.mozMobileConnections[sim] saadakseen pääsyn Mobile Connection API:iin, sitten lukee .signalStrength['activeType'] saadakseen signaalinvoimakkuuden",
        "4-details-example": "mobileData = navigator.mozMobileConnections[sim];<br>gsmSignal = mobileData.signalStrength.gsmSignalStrength; lteSignal = mobileData.signalStrength.lteSignalStrength;",
        "4-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
        "5-details-description": "Käyttää navigator.mozMobileConnections[sim] saadakseen pääsyn Mobile Connection API:iin, sitten lukee .data.roamingin saadakseen kiertämis-tilan",
        "5-details-example": "mobileData = navigator.mozMobileConnections[sim]; roaming = mobileData.data.roaming;",
        "5-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
        "6-details-description": "Käyttää navigator.mozMobileConnections[sim] saadakseen pääsyn Mobile Connection API:iin, sitten lukee .voicen.tila tunnistamaan yhteyden tilan",
        "6-details-example": "mobileData = navigator.mozMobileConnections[sim]; status = mobileData.voice.state;",
        "6-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",      
        "7-details-description": "Käyttää navigator.mozMobileConnections[sim] saadakseen pääsyn Mobile Connection API:iin, sitten lukee .iccIdin tunnistamaan ICCID:n",
        "7-details-example": "mobileData = navigator.mozMobileConnections[sim]; iccId = mobileData.iccId;",
        "7-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection"
      },
      {
        "1": "Tila",
        "2": "BT-nimi",
        "3": "Osoite",
        "4": "Löydettävissä",
        "5": "Etsitään",
        "index": "Bluetooth",
        "1-details-description": "Käyttää navigator.mozBluetoothia Bluetoothin API:en käyttöön, sitten lukee .defaultAdapter.state tunnistaakseen Bluetoothin tilan",
        "1-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.state",
        "1-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
        "2-details-description": "Käyttää navigator.mozBluetoothia Bluetoothin API:en käyttöön, sitten lukee .defaultAdapter.name tunnistaakseen Bluetooth-nimen",
        "2-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.name",
        "2-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
        "3-details-description": "Käyttää navigator.mozBluetoothia Bluetoothin API:en käyttöön, sitten lukee .defaultAdapter.address tunnistaakseen Bluetooth-osoitteen",
        "3-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.address",
        "3-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
        "4-details-description": "Käyttää navigator.mozBluetoothia Bluetoothin API:en käyttöön, sitten lukee .defaultAdapter.discoverable tunnistaakseen Bluetooth-löydettävyystilan",
        "4-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.discoverable",
        "4-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
        "5-details-description": "Käyttää navigator.mozBluetoothia Bluetoothin API:en käyttöön, sitten lukee .defaultAdapter.discovering tunnistaakseen Bluetoothin etsimisen tilan",
        "5-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.discovering",
        "5-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/"
      },
      {
        "1": "Tyyppi",
        "2": "Kokonaiskapasiteetti",
        "3": "Käytetty tila",
        "4": "Oletus",
        "index": "Tallennustila",
        "1-details-description": "Käyttää navigator.getDeviceStorages('sdcard') tallennus-API:n käyttöön, sitten lukee .storageName tunnistaakseen nimen ja tyypin",
        "1-details-example": "deviceStorages = navigator.getDeviceStorages('sdcard');<br>nimi = deviceStorages[index].storageName;",
        "1-details-source": "https://developer.kaiostech.com/docs/api/web-apis/deviceStorage/device-storage/",
        "2-details-description": "Käyttää navigator.getDeviceStorages('sdcard') tallennus-API:n käyttöön, sitten käyttää .freeSpace() ja .usedSpace() metodeja saadakseen vapaan ja käytetyn tilan yhteensä",
        "2-details-example": "deviceStorages = navigator.getDeviceStorages('sdcard');<br>kokonaiskapasiteetti = deviceStorages[index].freeSpace() + deviceStorages[index].usedSpace();",
        "2-details-source": "https://developer.kaiostech.com/docs/api/web-apis/deviceStorage/device-storage/",
        "3-details-description": "Käyttää navigator.getDeviceStorages('sdcard') tallennus-API:n käyttöön, sitten lukee .usedSpace metodia tunnistaakseen käytetyn tilan",
        "3-details-example": "deviceStorages = navigator.getDeviceStorages('sdcard'); käytettyTila = deviceStorages[index].usedSpace();",
        "3-details-source": "https://developer.kaiostech.com/docs/api/web-apis/deviceStorage/device-storage/",
        "4-details-description": "Käyttää navigator.getDeviceStorages('sdcard') tallennus-API:n käyttöön, sitten lukee .default tunnistaakseen oletustilan",
        "4-details-example": "deviceStorages = navigator.getDeviceStorages('sdcard'); oletus = deviceStorages[index].default;",
        "4-details-source": "https://developer.kaiostech.com/docs/api/web-apis/deviceStorage/device-storage/"
      },      
      {
        "1": "Valmistaja",
        "2": "Rakenna:",
        "3": "Julkaisupäivä:",
        "index": "Tietoja KaiOS Info"
      }
    ],
    "ru": [
      {
      "softLeftToggle": "Переключить",
      "softCenter": "Выбрать",
      "softRight": "Меню",
      "close": "Закрыть",
      "errorOnApi": "Не удалось получить доступ к Api",
      "errorOnApiSmall": "Нет доступа к API",
      "errorOnEmptyList": "Список устройств пуст",
      "errorOnDescription": "Нет доступных описаний",
      "errorOnExample": "Нет доступных примеров",
      "errorOnSource": "Нет доступных источников",
      "sideMenuExit": "Выход",
      "SideMenuToggleRefresh": "Переключить автообновление",
      "autoRefreshEnable": "Автообновление включено",
      "autoRefreshDisable": "Автообновление выключено",
      "sideMenuAbout": "О программе",
      "sideMenuOpenListMenu": "Открыть список",
      "yes": "Да",
      "no": "Нет",
      "enabled": "Включено",
      "disabled": "Выключено",
      "radioEnabled": "Радио включено",
      "radioDisabled": "Радио выключено",
      "connected": "Подключено",
      "disconnected": "Отключено",
      "bit-color": "бит цвета",
      "portrait": "Портрет",
      "landscape": "Альбомная",
      "megabytes": "МБ",
      "gigabytes": "ГБ",
      "ghz": "ГГц",
      "mhz": "МГц",
      "dbm": "дБм",
      "mbps": "Мбит/с",
      "megapixels": "МП",
      "millimeters": "мм",
      "charging": "Заряжается",
      "charged": "Заряжено",
      "discharging": "Разряжается",
      "left": "осталось",
      "internal": "Внутренняя",
      "external": "Внешняя",
      "unknown": "Неизвестно",
      "onLocaleInit": "Локаль инициализирована"
      },
      {
      "1": "Модель",
      "2": "ОС",
      "3": "Версия Firefox",
      "4": "ОЗУ",
      "5": "Режим разработчика",
      "index": "Система",
      "1-details-description": "Использует User-Agent для определения модели",
      "1-details-example": "В этом примере он находится под 'devicename' <br> Mozilla/5.0 (type, devicename; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion KAIOS/kaiosversion",
      "1-details-source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent",
      "2-details-description": "Использует User-Agent для определения ОС",
      "2-details-example": "В этом примере он находится под 'KAIOS/kaioversion' <br> <text class='syntax'>Mozilla/5.0 (type, devicename; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion KAIOS/kaiosversion",
      "2-details-source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent",
      "3-details-description": "Использует User-Agent для определения версии Firefox",
      "3-details-example": "В этом примере он находится под 'Firefox/firefoxversion' <br> <text class='syntax'>Mozilla/5.0 (type, devicename; rv:geckoversion) Gecko/geckotrail Firefox/firefoxversion KAIOS/kaiosversion",
      "3-details-source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent",
      "4-details-description": "Использует getFeature() с аргументом 'hardware.memory' для определения объема ОЗУ",
      "4-details-example": "ram = navigator.getFeature('hardware.memory')",
      "4-details-source": "https://wiki.mozilla.org/WebAPI/Navigator.hasFeature",
      "5-details-description": "Использует getFeature() с аргументом 'dom.apps.developer_mode' для определения статуса режима разработчика",
      "5-details-example": "devMode = navigator.getFeature('dom.apps.developer_mode')",
      "5-details-source": "https://kaios.dev/2024/01/complete-feature-detection-on-kaios/"
      },
      {
      "1": "Разрешение",
      "2": "Глубина",
      "3": "Соотношение сторон",
      "4": "Ориентация",
      "index": "Дисплей",
      "1-details-description": "Использует свойство Window: screen для определения разрешения",
      "1-details-example": "width = window.screen.width; height = window.screen.height;",
      "1-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen",
      "2-details-description": "Использует свойство Window: screen для определения глубины цвета",
      "2-details-example": "colorDepth = window.screen.colorDepth",
      "2-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen",
      "3-details-description": "Использует ширину и высоту экрана для расчета соотношения",
      "3-details-example": "commonDivisor = gcd(window.screen.width, window.screen.height); ratioWidth = window.screen.width / commonDivisor;",
      "3-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen",
      "4-details-description": "Использует свойство Window: screen для определения ориентации экрана",
      "4-details-example": "orientation = window.screen.mozOrientation || window.screen.orientation.type",
      "4-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen"
      },
      {
      "1": "Ядра",
      "2": "Частота",
      "index": "Процессор",
      "1-details-description": "Использует свойство Navigator: hardwareConcurrency для определения количества ядер",
      "1-details-example": "cpuCores = navigator.hardwareConcurrency",
      "1-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/hardwareConcurrency",
      "2-details-description": "Оценивает частоту ЦПУ с помощью циклов и метода Performance: now()",
      "2-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Performance/now"
      },
      {
      "1": "Модель",
      "2": "Производитель",
      "index": "Графический процессор",
      "1-details-description": "Использует WebGL для инициализации контекста доступа к информации о GPU. Извлекает сведения о рендерере GPU с использованием контекста WebGL.",
      "1-details-example": "canvas = document.createElement('canvas'); canvas.getContext('experimental-webgl') dbgRenderInfo = gl.getExtension('WEBGL_debug_renderer_info');",
      "1-details-source": "https://gist.github.com/cvan/042b2448fcecefafbb6a91469484cdf8",
      "2-details-description": "Использует WebGL для инициализации контекста доступа к информации о GPU. Извлекает сведения о производителе GPU с использованием контекста WebGL",
      "2-details-example": "canvas = document.createElement('canvas'); canvas.getContext('experimental-webgl') dbgRenderInfo = gl.getExtension('WEBGL_debug_renderer_info');",
      "2-details-source": "https://gist.github.com/cvan/042b2448fcecefafbb6a91469484cdf8"
      },
      {
      "1": "ИД",
      "2": "Имя",
      "3": "Разрешение фото",
      "4": "Фокусное расстояние",
      "5": "Разрешение видео",
      "6": "Битрейт",
      "7": "Время кадра",
      "8": "Кодек",
      "index": "Камера",
      "1-details-description": "Использует метод getCamera('identifier') объекта navigator.mozCameras для доступа к камере, затем считывает camera.id для идентификации идентификатора",
      "1-details-example": "cameraList = navigator .mozCameras.getListOfCameras(); camera = navigator.mozCameras.getCamera(camerasList[index]) id = camera.camera.id",
      "1-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "2-details-description": "Использует метод getListOfCameras() объекта navigator.mozCameras для получения названий камер",
      "2-details-example": "cameraList = navigator.mozCameras.getListOfCameras(); name = cameraList[index]",
      "2-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "3-details-description": "Использует метод getCamera('identifier') объекта navigator.mozCameras для доступа к камере, затем считывает camera.capabilities.width и height",
      "3-details-example": "camera = navigator .mozCameras.getCamera (camerasList[index]); width = camera.camera.capabilities.pictureSizes[0].width;",
      "3-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "4-details-description": "Использует метод getCamera('identifier') объекта navigator.mozCameras для доступа к камере, затем считывает camera.focalLength для идентификации фокусного расстояния",
      "4-details-example": "cameraList = navigator .mozCameras.getListOfCameras(); camera = navigator.mozCameras.getCamera(camerasList[index]); focal = camera.camera.focalLength",
      "4-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "5-details-description": "Использует метод getCamera('identifier') объекта navigator.mozCameras для доступа к камере, затем считывает .camera.capabilities.recorderProfiles[.configuration.recorderProfile] для идентификации разрешения видео",
      "5-details-example": "cR = cameraInfo[currentCameras] .configuration.recorderProfile; name = cameraInfo[currentCameras].camera.capabilities.recorderProfiles[cR].name",
      "5-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "6-details-description": "Использует метод getCamera('identifier') объекта navigator.mozCameras для доступа к камере, затем считывает .camera.capabilities.recorderProfiles[.configuration.recorderProfile] для идентификации битрейта видео",
      "6-details-example": "cR = cameraInfo [currentCameras].configuration .recorderProfile; bps = cameraInfo[currentCameras].camera.capabilities.recorderProfiles[cR].video.bitsPerSecond",
      "6-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "7-details-description": "Использует метод getCamera('identifier') объекта navigator.mozCameras для доступа к камере, затем считывает .camera.capabilities.recorderProfiles[.configuration.recorderProfile] для идентификации времени кадра видео",
      "7-details-example": "cR = cameraInfo [currentCameras].configuration .recorderProfile; fps = cameraInfo[currentCameras].camera.capabilities.recorderProfiles[cR].video.framesPerSecond",
      "7-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "8-details-description": "Использует метод getCamera('identifier') объекта navigator.mozCameras для доступа к камере, затем считывает .camera.capabilities.recorderProfiles[.configuration.recorderProfile] для идентификации кодека видео",
      "8-details-example": "cR = cameraInfo [currentCameras].configuration.recorderProfile; codec = cameraInfo[currentCameras].camera.capabilities.recorderProfiles[cR].video.codec",
      "8-details-source": "https://developer.mozilla.org.cach3.com/en-US/docs/Web/API/Navigator/mozCameras"
      },
      {
      "1": "Уровень",
      "2": "Состояние аккумулятора",
      "3": "Статус",
      "4": "Температура",
      "index": "Аккумулятор",
      "1-details-description": "Использует метод navigator.getBattery() для доступа к API аккумулятора, затем считывает .level для идентификации уровня заряда аккумулятора",
      "1-details-example": "navigator.getBattery().then(function(result){batteryData = result}); level = batteryData.level",
      "1-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/level/",
      "2-details-description": "Использует метод navigator.getBattery() для доступа к API аккумулятора, затем считывает .health для идентификации состояния аккумулятора",
      "2-details-example": "navigator.getBattery().then(function(result){batteryData = result}); health = batteryData.health",
      "2-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/health/",
      "3-details-description": "Использует метод navigator.getBattery() для доступа к API аккумулятора, затем проверяет .charging time для определения того, заряжается ли устройство или разряжается",
      "3-details-example": "navigator.getBattery().then(function(result){batteryData = result}); if (batteryData.charging){} else{}",
      "3-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/chargingtime/",
      "4-details-description": "Использует метод navigator.getBattery() для доступа к API аккумулятора, затем считывает .temperature для идентификации температуры аккумулятора",
      "4-details-example": "navigator.getBattery().then(function(result){batteryData = result}); temperature = batteryData.temperature",
      "4-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/temperature/"
      },
      {
      "1": "Тип",
      "2": "Имя SSID",
      "3": "Скорость",
      "4": "Уровень сигнала",
      "5": "IP-адрес",
      "6": "Частота",
      "7": "Доступ в Интернет",
      "8": "Скрытый SSID",
      "9": "MAC-адрес",
      "index": "Wi-Fi",
      "1-details-description": "Использует объект navigator.mozWifiManager для доступа к API Wi-Fi, затем считывает .enabled для идентификации статуса Wi-Fi",
      "1-details-example": "wifiData = navigator.mozWifiManager; wifiStatus = wifiData.enabled ? 'Включен' : 'Отключен';",
      "1-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "2-details-description": "Использует объект navigator.mozWifiManager для доступа к API Wi-Fi, затем считывает .connection.network.ssid для идентификации SSID Wi-Fi",
      "2-details-example": "wifiData = navigator.mozWifiManager; wifiSsid = wifiData.connection.network.ssid;",
      "2-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "3-details-description": "Использует объект navigator.mozWifiManager для доступа к API Wi-Fi, затем считывает .connectionInformation.linkSpeed для идентификации скорости соединения Wi-Fi",
      "3-details-example": "wifiData = navigator.mozWifiManager; wifiSpeed = wifiData.connectionInformation .linkSpeed;",
      "3-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "4-details-description": "Использует объект navigator.mozWifiManager для доступа к API Wi-Fi, затем считывает .connectionInformation.signalStrength для идентификации уровня сигнала Wi-Fi",
      "4-details-example": "wifiData = navigator.mozWifiManager; wifiSignal = wifiData.connectionInformation.signalStrength;",
      "4-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "5-details-description": "Использует объект navigator.mozWifiManager для доступа к API Wi-Fi, затем считывает .connectionInformation.ipAddress для идентификации IP-адреса Wi-Fi",
      "5-details-example": "wifiData = navigator.mozWifiManager; wifiIp = wifiData.connectionInformation.ipAddress;",
      "5-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "6-details-description": "Использует объект navigator.mozWifiManager для доступа к API Wi-Fi, затем считывает .connection .network.frequency для идентификации используемой частоты Wi-Fi",
      "6-details-example": "wifiData = navigator.mozWifiManager; wifiFrequency = wifiData.connection.network.frequency;",
      "6-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "7-details-description": "Использует объект navigator.mozWifiManager для доступа к API Wi-Fi, затем считывает .hasInternet для идентификации статуса интернета Wi-Fi",
      "7-details-example": "wifiData = navigator.mozWifiManager; wifiStatus = wifiData.hasInternet;",
      "7-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "8-details-description": "Использует объект navigator.mozWifiManager для доступа к API Wi-Fi, затем считывает .connection.network.hidden для идентификации наличия скрытого SSID Wi-Fi",
      "8-details-example": "wifiData = navigator.mozWifiManager; wifiHidden = wifiData.connection.network.hidden;",
      "8-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "9-details-description": "Использует объект navigator.mozWifiManager для доступа к API Wi-Fi, затем считывает .connection.network.macAddress для идентификации MAC-адреса Wi-Fi",
      "9-details-example": "wifiData = navigator.mozWifiManager; wifiMac = wifiData.connection.network.macAddress;",
      "9-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/"
      },
      {
        "1": "Тип",
        "2": "Провайдер",
        "3": "Стандарт",
        "4": "Уровень сигнала",
        "5": "Роуминг",
        "6": "Статус",
        "7": "ICCID",
        "index": "Сеть",
        "1-details-description": "Использует объект navigator.mozMobileConnections[sim] для доступа к API мобильного соединения, затем считывает .radioState для определения состояния радио",
        "1-details-example": "mobileData = navigator.mozMobileConnections[sim]; radio = mobileData.radioState;",
        "1-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
        "2-details-description": "Использует объект navigator.mozMobileConnections[sim] для доступа к API мобильного соединения, затем считывает .data.network.longName для определения провайдера",
        "2-details-example": "mobileData = navigator.mozMobileConnections[sim]; provider = mobileData.data.network.longName;",
        "2-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
        "3-details-description": "Использует объект navigator.mozMobileConnections[sim] для доступа к API мобильного соединения, затем считывает .data.type, если переменная пуста, предполагает GSM, если соединение активно",
        "3-details-example": "mobileData = navigator.mozMobileConnections[sim]; standard = mobileData.data.type ? mobileData.data.type : 'GSM';",
        "3-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
        "4-details-description": "Использует объект navigator.mozMobileConnections[sim] для доступа к API мобильного соединения, затем считывает .signalStrength['activeType'] для получения уровня сигнала",
        "4-details-example": "mobileData = navigator.mozMobileConnections[sim];<br>gsmSignal = mobileData.signalStrength.gsmSignalStrength; lteSignal = mobileData.signalStrength.lteSignalStrength;",
        "4-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
        "5-details-description": "Использует объект navigator.mozMobileConnections[sim] для доступа к API мобильного соединения, затем считывает .data.roaming для получения статуса роуминга",
        "5-details-example": "mobileData = navigator.mozMobileConnections[sim]; roaming = mobileData.data.roaming;",
        "5-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
        "6-details-description": "Использует объект navigator.mozMobileConnections[sim] для доступа к API мобильного соединения, затем считывает .voice.state для определения статуса соединения",
        "6-details-example": "mobileData = navigator.mozMobileConnections[sim]; status = mobileData.voice.state;",
        "6-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",      
        "7-details-description": "Использует объект navigator.mozMobileConnections[sim] для доступа к API мобильного соединения, затем считывает .iccId для определения ICCID",
        "7-details-example": "mobileData = navigator.mozMobileConnections[sim]; iccId = mobileData.iccId;",
        "7-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection"
      },
      {
        "1": "Статус",
        "2": "Имя BT",
        "3": "Адрес",
        "4": "Обнаружимость",
        "5": "Обнаружение",
        "index": "Bluetooth",
        "1-details-description": "Использует объект navigator.mozBluetooth для доступа к API Bluetooth, затем считывает .defaultAdapter.state для определения статуса Bluetooth",
        "1-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.state",
        "1-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
        "2-details-description": "Использует объект navigator.mozBluetooth для доступа к API Bluetooth, затем считывает .defaultAdapter.name для определения имени Bluetooth",
        "2-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.name",
        "2-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
        "3-details-description": "Использует объект navigator.mozBluetooth для доступа к API Bluetooth, затем считывает .defaultAdapter.address для определения адреса Bluetooth",
        "3-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.address",
        "3-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
        "4-details-description": "Использует объект navigator.mozBluetooth для доступа к API Bluetooth, затем считывает .defaultAdapter.discoverable для определения статуса обнаружимости Bluetooth",
        "4-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.discoverable",
        "4-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
        "5-details-description": "Использует объект navigator.mozBluetooth для доступа к API Bluetooth, затем считывает .defaultAdapter.discovering для определения статуса обнаружения Bluetooth",
        "5-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.discovering",
        "5-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/"
      },
      {
        "1": "Тип",
        "2": "Общее пространство",
        "3": "Использованное пространство",
        "4": "По умолчанию",
        "index": "Память",
        "1-details-description": "Использует navigator.getDeviceStorages('sdcard') для доступа к API хранилищ, затем считывает .storageName для определения имени и типа",
        "1-details-example": "deviceStorages = navigator.getDeviceStorages('sdcard');<br>name = deviceStorages[index].storageName;",
        "1-details-source": "https://developer.kaiostech.com/docs/api/web-apis/deviceStorage/device-storage/",
        "2-details-description": "Использует navigator.getDeviceStorages('sdcard') для доступа к API хранилищ, затем использует методы .freeSpace() и .usedSpace() для получения доступного и использованного пространства и объединяет их",
        "2-details-example": "deviceStorages = navigator.getDeviceStorages('sdcard');<br> total = deviceStorages[index].freeSpace() + deviceStorages[index].usedSpace();",
        "2-details-source": "https://developer.kaiostech.com/docs/api/web-apis/deviceStorage/device-storage/",
        "3-details-description": "Использует navigator.getDeviceStorages('sdcard') для доступа к API хранилищ, затем считывает метод .usedSpace для определения использованного пространства",
        "3-details-example": "deviceStorages = navigator.getDeviceStorages('sdcard'); usedSpace = deviceStorages[index].usedSpace();",
        "3-details-source": "https://developer.kaiostech.com/docs/api/web-apis/deviceStorage/device-storage/",
        "4-details-description": "Использует navigator.getDeviceStorages('sdcard') для доступа к API хранилищ, затем считывает .default для определения статуса по умолчанию",
        "4-details-example": "deviceStorages = navigator.getDeviceStorages('sdcard'); default = deviceStorages[index].default;",
        "4-details-source": "https://developer.kaiostech.com/docs/api/web-apis/deviceStorage/device-storage/"
      },
      {
        "1": "Сделано",
        "2": "Сборка:",
        "3": "Дата выпуска:",
        "index": "О KaiOS Info"
      }    
      ]
  
  
}
