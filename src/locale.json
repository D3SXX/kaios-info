{
  "en-US": [
    {
      "softLeftToggle": "Toggle",
      "softCenter": "Select",
      "softRight": "Menu",
      "close": "Close",
      "errorOnApi": "Couldn't get access to Api",
      "errorOnEmptyList": "Device list is empty",
      "sidemenu-exit": "Exit",
      "sidemenu-togglerefresh": "Toggle auto refresh",
      "sidemenu-about": "About",
      "sidemenu-openlistmenu": "Open list"
    },
    {
      "1": "Model",
      "2": "OS",
      "3": "Firefox Version",
      "4": "RAM",
      "5": "Developer Mode",
      "index": "System",
      "1-details-description": "Uses User-Agent to identify the model",
      "1-details-example": "In this example it is located under 'platform' <br> Mozilla/5.0 ('system-information') 'platform' ('platform-details') 'extensions'",
      "1-details-source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent",
      "2-details-description": "Uses User-Agent to identify the OS",
      "2-details-example": "In this example it is located under 'extensions' <br> <text class='syntax'>Mozilla/5.0 ('system-information') 'platform' ('platform-details') 'extensions'",
      "2-details-source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent",
      "3-details-description": "Uses User-Agent to identify the firefox version",
      "3-details-example": "In this example it is located under 'extensions' <br> <text class='syntax'>Mozilla/5.0 ('system-information') 'platform' ('platform-details') 'extensions'",
      "3-details-source": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent",
      "4-details-description": "Uses getFeature() with argument 'hardware.memory' to identify the amount of RAM",
      "4-details-example": "ram = navigator.getFeature ('hardware.memory')",
      "4-details-source": "https://wiki.mozilla.org/WebAPI/Navigator.hasFeature",
      "5-details-description": "Uses getFeature() with argument 'dom.apps.developer_mode' to identify the Developer Mode status",
      "5-details-example": "devMode = navigator.getFeature ('dom.apps.developer_mode')",
      "5-details-source": "https://kaios.dev/2024/01/complete-feature-detection-on-kaios/"
    },
    {
      "1": "Resolution",
      "2": "Depth",
      "3": "Aspect ratio",
      "4": "Orientation",
      "index": "Display",
      "1-details-description": "Uses Window: screen property to identify the resolution",
      "1-details-example": "width = window.screen.width; height = window.screen.height;",
      "1-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen",
      "2-details-description": "Uses Window: screen property to identify the color depth",
      "2-details-example": "colorDepth = window.screen.colorDepth",
      "2-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen",
      "3-details-description": "Uses screen's width and height to calculate ratio",
      "3-details-example": "commonDivisor = gcd(window.screen.width, window.screen.height); ratioWidth = window.screen.width / commonDivisor;",
      "3-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen",
      "4-details-description": "Uses Window: screen property to identify the screen orientation",
      "4-details-example": "orientation = window.screen .mozOrientation || window.screen .orientation.type",
      "4-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Screen"
    },
    {
      "1": "Cores",
      "2": "Frequency",
      "index": "CPU",
      "1-details-description": "Uses Navigator: hardwareConcurrency property to identify the amount of cores",
      "1-details-example": "cpuCores = navigator .hardwareConcurrency",
      "1-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/hardwareConcurrency",
      "2-details-description": "Estimates the cpu frequency by using for loops and Performance: now() method",
      "2-details-source": "https://developer.mozilla.org/en-US/docs/Web/API/Performance/now"
    },
    {
      "1": "Model",
      "2": "Manufacturer",
      "index": "GPU",
      "1-details-description": "Uses WebGL to initialize a context to access GPU information. It retrieves GPU renderer details using the WebGL context.",
      "1-details-example": "canvas = document .createElement('canvas'); canvas.getContext ('experimental-webgl') dbgRenderInfo = gl.getExtension ('WEBGL_debug_renderer_info');",
      "1-details-source": "https://gist.github.com/cvan/042b2448fcecefafbb6a91469484cdf8",
      "2-details-description": "Uses WebGL to initialize a context to access GPU information. It retrieves GPU vendor details using the WebGL context",
      "2-details-example": "canvas = document .createElement('canvas'); canvas.getContext ('experimental-webgl') dbgRenderInfo = gl.getExtension ('WEBGL_debug_renderer_info');",
      "2-details-source": "https://gist.github.com/cvan/042b2448fcecefafbb6a91469484cdf8"
    },
    {
      "1": "Id",
      "2": "Name",
      "3": "Photo Resolution",
      "4": "Focal Length",
      "5": "Video Resolution",
      "6": "Bitrate",
      "7": "Frametime",
      "8": "Codec",
      "index": "Camera",
      "1-details-description": "Uses navigator.mozCameras's getCamera('identifier') method to access the camera, then it reads camera.id to identify the id",
      "1-details-example": "cameraList = navigator .mozCameras .getListOfCameras(); camera = navigator .mozCameras .getCamera(camerasList[index]) id = camera.camera.id",
      "1-details-source": "https://developer.mozilla.org .cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "2-details-description": "Uses navigator.mozCameras's getListOfCameras() method to get camera names",
      "2-details-example": "cameraList = navigator.mozCameras.getListOfCameras(); name = cameraList[index]",
      "2-details-source": "https://developer.mozilla.org .cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "3-details-description": "Uses navigator.mozCameras's getCamera('identifier') method to access the camera, then it reads camera.capabilities.width and height",
      "3-details-example": "camera = navigator .mozCameras.getCamera (camerasList[index]); width = camera.camera .capabilities.pictureSizes[0] .width;",
      "3-details-source": "https://developer.mozilla.org .cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "4-details-description": "Uses navigator.mozCameras's getCamera('identifier') method to access the camera, then it reads camera.focalLength to identify the focal length",
      "4-details-example": "cameraList = navigator .mozCameras .getListOfCameras(); camera = navigator .mozCameras .getCamera(camerasList[index]) focal = camera.camera.focalLength",
      "4-details-source": "https://developer.mozilla.org .cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "5-details-description": "Uses navigator.mozCameras's getCamera('identifier') method to access the camera, then it reads .camera.capabilities .recorderProfiles [.configuration.recorderProfile] to identify the video resolution",
      "5-details-example": "cR = cameraInfo[currentCameras] .configuration.recorderProfile; r = cameraInfo[currentCameras] .camera.capabilities .recorderProfiles[cR].name",
      "5-details-source": "https://developer.mozilla.org .cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "6-details-description": "Uses navigator.mozCameras's getCamera('identifier') method to access the camera, then it reads .camera.capabilities .recorderProfiles [.configuration.recorderProfile] to identify the video bitrate",
      "6-details-example": "cR = cameraInfo [currentCameras].configuration .recorderProfile;<br> r = cameraInfo [currentCameras].camera .capabilities.recorderProfiles [cR].video.bitsPerSecond",
      "6-details-source": "https://developer.mozilla.org .cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "7-details-description": "Uses navigator.mozCameras's getCamera('identifier') method to access the camera, then it reads .camera.capabilities .recorderProfiles [.configuration.recorderProfile] to identify the video frametime",
      "7-details-example": "cR = cameraInfo [currentCameras].configuration .recorderProfile;<br> r = cameraInfo [currentCameras].camera .capabilities.recorderProfiles [cR].video.framesPerSecond",
      "7-details-source": "https://developer.mozilla.org .cach3.com/en-US/docs/Web/API/Navigator/mozCameras",
      "8-details-description": "Uses navigator.mozCameras's getCamera('identifier') method to access the camera, then it reads .camera.capabilities .recorderProfiles [.configuration.recorderProfile] to identify the video codec",
      "8-details-example": "cR = cameraInfo [currentCameras].configuration .recorderProfile;<br> r = cameraInfo [currentCameras].camera .capabilities.recorderProfiles [cR].video.codec",
      "8-details-source": "https://developer.mozilla.org .cach3.com/en-US/docs/Web/API/Navigator/mozCameras"
    },
    {
      "1": "Level",
      "2": "Health",
      "3": "Status",
      "4": "Temperature",
      "index": "Battery",
      "1-details-description": "Uses navigator.getBattery() method to access the battery API, then it reads .level to identify the battery level",
      "1-details-example": "navigator.getBattery() .then(function(result) {batteryData = result}); level = batteryData.level",
      "1-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/level/",
      "2-details-description": "Uses navigator.getBattery() method to access the battery API, then it reads .health to identify the battery health",
      "2-details-example": "navigator.getBattery() .then(function(result) {batteryData = result}); health = batteryData.health",
      "2-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/health/",
      "3-details-description": "Uses navigator.getBattery() method to access the battery API, then checks .charging time to determine if device is charging or discharging",
      "3-details-example": "navigator.getBattery() .then(function(result) {batteryData = result}); if (batteryData.charging){} else{}",
      "3-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/chargingtime/",
      "4-details-description": "Uses navigator.getBattery() method to access the battery API, then it reads .temperature to identify the battery temperature",
      "4-details-example": "navigator.getBattery() .then(function(result) {batteryData = result}); temperature = batteryData.temperature",
      "4-details-source": "https://developer.kaiostech.com/docs/api/web-apis/batterymanager/temperature/"
    },
    {
      "1": "Type",
      "2": "SSID",
      "3": "Speed",
      "4": "Signal Strength",
      "5": "IP Address",
      "6": "Frequency",
      "7": "Internet Access",
      "8": "Hidden SSID",
      "9": "MAC",
      "index": "Wi-Fi",
      "1-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .enabled to identify the Wi-Fi enabled status",
      "1-details-example": "wifiData = navigator.mozWifiManager; wifiStatus = wifiData.enabled ? 'Enabled' : 'Disabled';",
      "1-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "2-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .connection.network.ssid to identify the Wi-Fi SSID",
      "2-details-example": "wifiData = navigator.mozWifiManager; wifiSsid = wifiData .connection.network.ssid;",
      "2-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "3-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .connectionInformation .linkSpeed to identify the Wi-Fi connection speed",
      "3-details-example": "wifiData = navigator.mozWifiManager; wifiSpeed = wifiData.connectionInformation .linkSpeed;",
      "3-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "4-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .connectionInformation .signalStrength to identify the Wi-Fi signal strength",
      "4-details-example": "wifiData = navigator.mozWifiManager; wifiSignal = wifiData.connectionInformation .signalStrength;",
      "4-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "5-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .connectionInformation .ipAddress to identify the Wi-Fi IP Address",
      "5-details-example": "wifiData = navigator.mozWifiManager; wifiIp = wifiData.connectionInformation .ipAddress;",
      "5-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "6-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .connection .network.frequency to identify the Wi-Fi frequency used",
      "6-details-example": "wifiData = navigator.mozWifiManager; wifiFrequency = wifiData.connection .network.frequency;",
      "6-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "7-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .hasInternet to identify the Wi-Fi internet status",
      "7-details-example": "wifiData = navigator.mozWifiManager; wifiStatus = wifiData.hasInternet;",
      "7-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "8-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .connection .network.hidden to identify the Wi-Fi hidden status",
      "8-details-example": "wifiData = navigator.mozWifiManager; wifiStatus = wifiData.connection .network.hidden;",
      "8-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/",
      "9-details-description": "Uses navigator.mozWifiManager to access the Wi-Fi API, then it reads .macAddress to identify the Wi-Fi MAC Address",
      "9-details-example": "wifiData = navigator.mozWifiManager; wifiStatus = wifiData.macAddress;",
      "9-details-source": "https://developer.kaiostech.com/docs/api/web-apis/wifiInformation/wifimanager/"
    },
    {
      "1": "Type",
      "2": "Provider",
      "3": "Standard",
      "4": "Signal Strength",
      "5": "Roaming",
      "6": "Status",
      "7": "ICCID",
      "index": "Network",
      "1-details-description": "Uses navigator .mozMobileConnections[sim] to access the Mobile Connection API, then it reads .radioState to identify the radio status",
      "1-details-example": "mobileData = navigator .mozMobileConnections[sim]; radio = mobileData.radioState;",
      "1-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
      "2-details-description": "Uses navigator. mozMobileConnections[sim] to access the Mobile Connection API, then it reads .data.network.longName to identify the provider",
      "2-details-example": "mobileData = navigator .mozMobileConnections[sim]; provider = mobileData .data.network.longName;",
      "2-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
      "3-details-description": "Uses navigator .mozMobileConnections[sim] to access the Mobile Connection API, then it reads .data.type, if the variable is empty assumes GSM if connection is active",
      "3-details-example": "mobileData = navigator. mozMobileConnections[sim]; standard = mobileData.data.type ? mobileData.data.type : 'GSM';",
      "3-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
      "4-details-description": "Uses navigator .mozMobileConnections[sim] to access the Mobile Connection API, then it reads .signalStrength['activeType'] to get the signal strength",
      "4-details-example": "mobileData = navigator .mozMobileConnections[sim];<br>gsmSignal = mobileData.signalStrength .gsmSignalStrength; lteSignal = mobileData.signalStrength. lteSignalStrength;",
      "4-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
      "5-details-description": "Uses navigator .mozMobileConnections[sim] to access the Mobile Connection API, then it reads .data.roaming to get the roaming status",
      "5-details-example": "mobileData = navigator .mozMobileConnections[sim]; roaming = mobileData.data.roaming;",
      "5-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",
      "6-details-description": "Uses navigator .mozMobileConnections[sim] to access the Mobile Connection API, then it reads .voice.state to identify the connection status",
      "6-details-example": "mobileData = navigator .mozMobileConnections[sim]; status = mobileData.voice.state;",
      "6-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection",      
      "7-details-description": "Uses navigator .mozMobileConnections[sim] to access the Mobile Connection API, then it reads .iccId to identify the ICCID",
      "7-details-example": "mobileData = navigator .mozMobileConnections[sim]; iccId = mobileData.iccId;",
      "7-details-source": "https://wiki.mozilla.org/WebAPI/WebMobileConnection"
    },
    {
      "1": "Status",
      "2": "BT Name",
      "3": "Address",
      "4": "Discoverable",
      "5": "Discovering",
      "index": "Bluetooth",
      "1-details-description": "Uses navigator. mozBluetooth to access the Bluetooth API, then reads .defaultAdapter.state to identify bluetooth status",
      "1-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.state",
      "1-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
      "2-details-description": "Uses navigator. mozBluetooth to access the Bluetooth API, then reads .defaultAdapter.name to identify bluetooth name",
      "2-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.name",
      "2-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
      "3-details-description": "Uses navigator. mozBluetooth to access the Bluetooth API, then reads .defaultAdapter.address to identify bluetooth address",
      "3-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.address",
      "3-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
      "4-details-description": "Uses navigator. mozBluetooth to access the Bluetooth API, then reads .defaultAdapter.discoverable to identify bluetooth discoverable status",
      "4-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.discoverable",
      "4-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/",
      "5-details-description": "Uses navigator. mozBluetooth to access the Bluetooth API, then reads .defaultAdapter.discovering to identify bluetooth discovering status",
      "5-details-example": "bluetoothData = navigator.mozBluetooth.defaultAdapter; status = bluetoothData.discovering",
      "5-details-source": "https://developer.kaiostech.com/docs/api/web-apis/bluetooth/bluetooth/"
    },
    {
      "1": "Type",
      "2": "Total Space",
      "3": "Space Used",
      "4": "Default",
      "index": "Storage"
    },
    {
      "1": "Made by",
      "2": "Build:",
      "3": "Release date:",
      "index": "About KaiOS Info"
    }
  ]
}
